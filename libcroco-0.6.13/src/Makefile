# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Author: Fan, Chun-wei
# Common Autotools file used to generate Visual Studio 2008+
# Projects from their templates

# This autotools file, from GLib, can be used in other projects
# that have Visual Studio build support.

# * Input variables:
#
#   MSVCPROJS - List of Projects that should be generated
#
# * Simple tutorial
#
# Add this to Makefile.am where your library/program is built:
#   include <this Makefile.msvcproj>
#   MSVCPROJS = YourProject (can be multiple projects in a single srcdir)
#   YourProject_FILES = $(libyourlib_1_0_SOURCES)
#   YourProject_EXCLUDES = ... # list of sources to exclude, separated by '|', wildcards allowed; use random unsed value if none
#   (the following 3 lines if headers need to be installed)
#   YourProject_HEADERS_DIR = $(libyourlibincludedir)
#   YourProject_HEADERS_INST = $(libyourlib_1_0_HEADERS)
#   YourProject_HEADERS_EXCLUDES = ... # <list of headers to exclude from installation, separated by '|', wildcards allowed; use random unsed value if none>
#
#   dist-hook: \ # (or add to it if it is already there, note the vs9 items will also call the vs10 items in the process)
#   	$(top_builddir)/win32/vs9/YourProject.vcproj	\
#   	$(top_builddir)/win32/vs9/YourProject.headers	# if headers need to be installed
#
#   --or, if Visual Studio 2013 or later is required--
#   dist-hook: \ # (or add to it if it is already there, this does -not- call other vs items in the process)
#	$(top_builddir)/win32/vs12/YourProject.vcxproj	\
#	$(top_builddir)/win32/vs12/YourProject.vs12.headers	# if headers need to be installed

# Private functions



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libcroco
pkgincludedir = $(includedir)/libcroco
pkglibdir = $(libdir)/libcroco
pkglibexecdir = $(libexecdir)/libcroco
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = aarch64-unknown-linux-gnu
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(crocoinc_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libcroco-config.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(crocoincdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libcroco_0_6_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 =
am_libcroco_0_6_la_OBJECTS = libcroco_0_6_la-cr-utils.lo \
	libcroco_0_6_la-cr-input.lo libcroco_0_6_la-cr-enc-handler.lo \
	libcroco_0_6_la-cr-num.lo libcroco_0_6_la-cr-rgb.lo \
	libcroco_0_6_la-cr-token.lo libcroco_0_6_la-cr-tknzr.lo \
	libcroco_0_6_la-cr-term.lo libcroco_0_6_la-cr-attr-sel.lo \
	libcroco_0_6_la-cr-pseudo.lo \
	libcroco_0_6_la-cr-additional-sel.lo \
	libcroco_0_6_la-cr-simple-sel.lo \
	libcroco_0_6_la-cr-selector.lo \
	libcroco_0_6_la-cr-doc-handler.lo libcroco_0_6_la-cr-parser.lo \
	libcroco_0_6_la-cr-declaration.lo \
	libcroco_0_6_la-cr-statement.lo \
	libcroco_0_6_la-cr-stylesheet.lo libcroco_0_6_la-cr-cascade.lo \
	libcroco_0_6_la-cr-om-parser.lo libcroco_0_6_la-cr-style.lo \
	libcroco_0_6_la-cr-sel-eng.lo libcroco_0_6_la-cr-fonts.lo \
	libcroco_0_6_la-cr-prop-list.lo \
	libcroco_0_6_la-cr-parsing-location.lo \
	libcroco_0_6_la-cr-string.lo $(am__objects_1)
libcroco_0_6_la_OBJECTS = $(am_libcroco_0_6_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libcroco_0_6_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libcroco_0_6_la_CFLAGS) $(CFLAGS) $(libcroco_0_6_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	./$(DEPDIR)/libcroco_0_6_la-cr-additional-sel.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-attr-sel.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-cascade.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-declaration.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-doc-handler.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-enc-handler.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-fonts.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-input.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-num.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-om-parser.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-parser.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-parsing-location.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-prop-list.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-pseudo.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-rgb.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-sel-eng.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-selector.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-simple-sel.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-statement.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-string.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-style.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-stylesheet.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-term.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-tknzr.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-token.Plo \
	./$(DEPDIR)/libcroco_0_6_la-cr-utils.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libcroco_0_6_la_SOURCES)
DIST_SOURCES = $(libcroco_0_6_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(crocoinc_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/libcroco-config.h.in \
	$(top_srcdir)/depcomp $(top_srcdir)/win32/Makefile.msvcproj
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jianglei/svg/libcroco-0.6.13/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = aarch64-linux-android-ar
AUTOCONF = ${SHELL} /home/jianglei/svg/libcroco-0.6.13/missing autoconf
AUTOHEADER = ${SHELL} /home/jianglei/svg/libcroco-0.6.13/missing autoheader
AUTOMAKE = ${SHELL} /home/jianglei/svg/libcroco-0.6.13/missing automake-1.16
AWK = mawk
BSYMBOLIC_LDFLAG = -Wl,-Bsymbolic-functions
CC = aarch64-linux-android-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -D__ANDROID_API__=21 --sysroot=/home/jianglei/android-ndk-r17/NDK/arm64/sysroot -Wall -Wextra -Wunused -Wreturn-type -Wswitch -Wcomment -Wtrigraphs -Wchar-subscripts -Wparentheses -Winline -Wredundant-decls -Wformat-nonliteral -Werror=format-security -Wsign-compare -Werror=implicit-function-declaration -Wpointer-arith -Wwrite-strings -Wstrict-prototypes -Waggregate-return -Wcast-align -Wimplicit -Wuninitialized -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wpacked -Wmissing-format-attribute -Wshadow -Wstrict-aliasing=2 -Winit-self -Wunsafe-loop-optimizations -Wdeclaration-after-statement -Wold-style-definition -Wno-missing-field-initializers -Wno-unused-parameter -fno-common -Wno-switch-enum
CPP = aarch64-linux-android-gcc -E
CPPFLAGS = 
CROCO_CFLAGS = -I/home/jianglei/svg/build/usr/local/include/glib-2.0 -I/home/jianglei/svg/build/usr/local/lib/glib-2.0/include -I/home/jianglei/svg/build/usr/local/include -I/home/jianglei/svg/build/usr/local/include/libxml2
CROCO_LIB = libcroco-0.6.la
CROCO_LIBS = -L/home/jianglei/svg/build/usr/local/lib -lglib-2.0 -lintl -liconv -lxml2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
GTKDOC_CHECK = gtkdoc-check.test
GTKDOC_CHECK_PATH = /usr/bin/gtkdoc-check
GTKDOC_DEPS_CFLAGS = -I/home/jianglei/svg/build/usr/local/include/glib-2.0 -I/home/jianglei/svg/build/usr/local/lib/glib-2.0/include -I/home/jianglei/svg/build/usr/local/include
GTKDOC_DEPS_LIBS = -L/home/jianglei/svg/build/usr/local/lib -lgobject-2.0 -lglib-2.0 -lintl -liconv
GTKDOC_MKPDF = /usr/bin/gtkdoc-mkpdf
GTKDOC_REBASE = /usr/bin/gtkdoc-rebase
G_DISABLE_CHECKS = 0
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = aarch64-linux-android-ld
LDFLAGS = 
LIBCROCO_AGE = 0
LIBCROCO_CURRENT = 3
LIBCROCO_MAJOR_VERSION = 0
LIBCROCO_MICRO_VERSION = 12
LIBCROCO_MINOR_VERSION = 6
LIBCROCO_VERSION = 0.6.12
LIBCROCO_VERSION_INFO = 3:1:0
LIBCROCO_VERSION_NUMBER = 612
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /home/jianglei/svg/libcroco-0.6.13/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = aarch64-linux-android-nm
NMEDIT = 
OBJDUMP = aarch64-linux-android-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libcroco
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=libcroco
PACKAGE_NAME = libcroco
PACKAGE_STRING = libcroco 0.6.13
PACKAGE_TARNAME = libcroco
PACKAGE_URL = 
PACKAGE_VERSION = 0.6.13
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = /home/jianglei/svg/build/usr/local/lib/pkgconfig
PKG_CONFIG_PATH = 
RANLIB = aarch64-linux-android-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = aarch64-linux-android-strip
VERSION = 0.6.13
abs_builddir = /home/jianglei/svg/libcroco-0.6.13/src
abs_srcdir = /home/jianglei/svg/libcroco-0.6.13/src
abs_top_builddir = /home/jianglei/svg/libcroco-0.6.13
abs_top_srcdir = /home/jianglei/svg/libcroco-0.6.13
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = aarch64-unknown-linux-gnu
host_alias = aarch64-linux
host_cpu = aarch64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jianglei/svg/libcroco-0.6.13/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/jianglei/svg/build/usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
NULL = 
lib_LTLIBRARIES = libcroco-0.6.la
#no_undefined = -no-undefined

#Headers files to be distributed
crocoincdir = $(includedir)/$(PACKAGE)-$(LIBCROCO_MAJOR_VERSION).$(LIBCROCO_MINOR_VERSION)/libcroco
crocoinc_HEADERS = \
	libcroco.h \
	cr-additional-sel.h \
	cr-attr-sel.h \
	cr-cascade.h \
	cr-declaration.h \
	cr-doc-handler.h \
	cr-enc-handler.h \
	cr-input.h \
	cr-num.h \
	cr-om-parser.h \
	cr-parser.h \
	cr-pseudo.h \
	cr-rgb.h \
	cr-selector.h \
	cr-simple-sel.h \
	cr-statement.h \
	cr-stylesheet.h \
	cr-term.h \
	cr-tknzr.h \
	cr-token.h \
	cr-utils.h \
	cr-fonts.h \
	cr-sel-eng.h \
	cr-style.h \
	cr-prop-list.h \
	cr-parsing-location.h \
	cr-string.h \
	libcroco-config.h \
	$(NULL)

libcroco_0_6_la_SOURCES = \
	cr-utils.c \
	cr-utils.h \
	cr-input.c \
	cr-input.h \
	cr-enc-handler.c \
	cr-enc-handler.h \
	cr-num.c \
	cr-num.h \
	cr-rgb.c \
	cr-rgb.h \
	cr-token.c \
	cr-token.h \
	cr-tknzr.c \
	cr-tknzr.h \
	cr-term.c \
	cr-term.h \
	cr-attr-sel.c \
	cr-attr-sel.h \
	cr-pseudo.c \
	cr-pseudo.h \
	cr-additional-sel.c \
	cr-additional-sel.h \
	cr-simple-sel.c \
	cr-simple-sel.h \
	cr-selector.c \
	cr-selector.h \
	cr-doc-handler.c \
	cr-doc-handler.h \
	cr-parser.c \
	cr-parser.h \
	cr-declaration.c \
	cr-declaration.h \
	cr-statement.c \
	cr-statement.h \
	cr-stylesheet.c \
	cr-stylesheet.h \
	cr-cascade.c \
	cr-cascade.h \
	cr-om-parser.c \
	cr-om-parser.h \
	cr-style.c \
	cr-style.h \
	cr-sel-eng.c \
	cr-sel-eng.h \
	cr-fonts.c \
	cr-fonts.h \
	cr-prop-list.c \
	cr-prop-list.h \
	cr-parsing-location.c \
	cr-parsing-location.h \
	cr-string.c \
	cr-string.h \
	$(NULL)

libcroco_0_6_la_CPPFLAGS = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/intl \
	-I$(top_builddir)/src \
	$(AM_CPPFLAGS)

libcroco_0_6_la_CFLAGS = \
	$(CROCO_CFLAGS) \
	$(AM_CFLAGS)

libcroco_0_6_la_LDFLAGS = \
	-version-info 3:1:0 \
	$(no_undefined) \
	$(BSYMBOLIC_LDFLAG) \
	$(AM_LDFLAGS)

libcroco_0_6_la_LIBADD = \
	$(CROCO_LIBS)

EXTRA_DIST = libcroco.symbols

# MSVC Build Items
MSVCPROJS = croco
croco_FILES = $(libcroco_0_6_la_SOURCES)
croco_EXCLUDES = dummy
croco_HEADERS_DIR = $(crocoincdir)
croco_HEADERS_INST = $(crocoinc_HEADERS)
croco_HEADERS_EXCLUDES = dummy
_proj_name = $(subst /,_,$(subst -,_,$(subst .,_,$(1))))
_proj_path_raw := $(subst $(abs_top_srcdir),,$(abs_srcdir))
_proj_path = $(subst /,\\,$(_proj_path_raw))
_proj_subdir_int = $(subst \\\\,\\,\\$(_proj_path)\\)
_proj_subdir = $(subst \\.\\,\\,$(_proj_subdir_int))
_proj_files_raw = $(subst /,\\,$($(_proj_name)_FILES))
_proj_files = $(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_proj_path)\\,\\,$(_proj_files_raw))))
_proj_filters = $($(_proj_name)_EXCLUDES)
_proj_headers_raw = $(subst /,\\,$($(_proj_name)_HEADERS_INST))
_proj_headers = $(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_proj_path)\\,\\,$(_proj_headers_raw))))
_proj_headers_excludes = $($(_proj_name)_HEADERS_EXCLUDES)
_headers_dest_posix = $(subst $(includedir),,$($(_proj_name)_HEADERS_DIR))
_headers_destdir = $(subst /,\\,$(_headers_dest_posix))
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/win32/Makefile.msvcproj $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/win32/Makefile.msvcproj $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libcroco-config.h: $(top_builddir)/config.status $(srcdir)/libcroco-config.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libcroco-0.6.la: $(libcroco_0_6_la_OBJECTS) $(libcroco_0_6_la_DEPENDENCIES) $(EXTRA_libcroco_0_6_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libcroco_0_6_la_LINK) -rpath $(libdir) $(libcroco_0_6_la_OBJECTS) $(libcroco_0_6_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcroco_0_6_la-cr-additional-sel.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-attr-sel.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-cascade.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-declaration.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-doc-handler.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-enc-handler.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-fonts.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-input.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-num.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-om-parser.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-parser.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-parsing-location.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-prop-list.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-pseudo.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-rgb.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-sel-eng.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-selector.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-simple-sel.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-statement.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-string.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-style.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-stylesheet.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-term.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-tknzr.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-token.Plo # am--include-marker
include ./$(DEPDIR)/libcroco_0_6_la-cr-utils.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libcroco_0_6_la-cr-utils.lo: cr-utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-utils.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-utils.Tpo -c -o libcroco_0_6_la-cr-utils.lo `test -f 'cr-utils.c' || echo '$(srcdir)/'`cr-utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-utils.Tpo $(DEPDIR)/libcroco_0_6_la-cr-utils.Plo
#	$(AM_V_CC)source='cr-utils.c' object='libcroco_0_6_la-cr-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-utils.lo `test -f 'cr-utils.c' || echo '$(srcdir)/'`cr-utils.c

libcroco_0_6_la-cr-input.lo: cr-input.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-input.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-input.Tpo -c -o libcroco_0_6_la-cr-input.lo `test -f 'cr-input.c' || echo '$(srcdir)/'`cr-input.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-input.Tpo $(DEPDIR)/libcroco_0_6_la-cr-input.Plo
#	$(AM_V_CC)source='cr-input.c' object='libcroco_0_6_la-cr-input.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-input.lo `test -f 'cr-input.c' || echo '$(srcdir)/'`cr-input.c

libcroco_0_6_la-cr-enc-handler.lo: cr-enc-handler.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-enc-handler.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-enc-handler.Tpo -c -o libcroco_0_6_la-cr-enc-handler.lo `test -f 'cr-enc-handler.c' || echo '$(srcdir)/'`cr-enc-handler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-enc-handler.Tpo $(DEPDIR)/libcroco_0_6_la-cr-enc-handler.Plo
#	$(AM_V_CC)source='cr-enc-handler.c' object='libcroco_0_6_la-cr-enc-handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-enc-handler.lo `test -f 'cr-enc-handler.c' || echo '$(srcdir)/'`cr-enc-handler.c

libcroco_0_6_la-cr-num.lo: cr-num.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-num.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-num.Tpo -c -o libcroco_0_6_la-cr-num.lo `test -f 'cr-num.c' || echo '$(srcdir)/'`cr-num.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-num.Tpo $(DEPDIR)/libcroco_0_6_la-cr-num.Plo
#	$(AM_V_CC)source='cr-num.c' object='libcroco_0_6_la-cr-num.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-num.lo `test -f 'cr-num.c' || echo '$(srcdir)/'`cr-num.c

libcroco_0_6_la-cr-rgb.lo: cr-rgb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-rgb.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-rgb.Tpo -c -o libcroco_0_6_la-cr-rgb.lo `test -f 'cr-rgb.c' || echo '$(srcdir)/'`cr-rgb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-rgb.Tpo $(DEPDIR)/libcroco_0_6_la-cr-rgb.Plo
#	$(AM_V_CC)source='cr-rgb.c' object='libcroco_0_6_la-cr-rgb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-rgb.lo `test -f 'cr-rgb.c' || echo '$(srcdir)/'`cr-rgb.c

libcroco_0_6_la-cr-token.lo: cr-token.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-token.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-token.Tpo -c -o libcroco_0_6_la-cr-token.lo `test -f 'cr-token.c' || echo '$(srcdir)/'`cr-token.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-token.Tpo $(DEPDIR)/libcroco_0_6_la-cr-token.Plo
#	$(AM_V_CC)source='cr-token.c' object='libcroco_0_6_la-cr-token.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-token.lo `test -f 'cr-token.c' || echo '$(srcdir)/'`cr-token.c

libcroco_0_6_la-cr-tknzr.lo: cr-tknzr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-tknzr.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-tknzr.Tpo -c -o libcroco_0_6_la-cr-tknzr.lo `test -f 'cr-tknzr.c' || echo '$(srcdir)/'`cr-tknzr.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-tknzr.Tpo $(DEPDIR)/libcroco_0_6_la-cr-tknzr.Plo
#	$(AM_V_CC)source='cr-tknzr.c' object='libcroco_0_6_la-cr-tknzr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-tknzr.lo `test -f 'cr-tknzr.c' || echo '$(srcdir)/'`cr-tknzr.c

libcroco_0_6_la-cr-term.lo: cr-term.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-term.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-term.Tpo -c -o libcroco_0_6_la-cr-term.lo `test -f 'cr-term.c' || echo '$(srcdir)/'`cr-term.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-term.Tpo $(DEPDIR)/libcroco_0_6_la-cr-term.Plo
#	$(AM_V_CC)source='cr-term.c' object='libcroco_0_6_la-cr-term.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-term.lo `test -f 'cr-term.c' || echo '$(srcdir)/'`cr-term.c

libcroco_0_6_la-cr-attr-sel.lo: cr-attr-sel.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-attr-sel.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-attr-sel.Tpo -c -o libcroco_0_6_la-cr-attr-sel.lo `test -f 'cr-attr-sel.c' || echo '$(srcdir)/'`cr-attr-sel.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-attr-sel.Tpo $(DEPDIR)/libcroco_0_6_la-cr-attr-sel.Plo
#	$(AM_V_CC)source='cr-attr-sel.c' object='libcroco_0_6_la-cr-attr-sel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-attr-sel.lo `test -f 'cr-attr-sel.c' || echo '$(srcdir)/'`cr-attr-sel.c

libcroco_0_6_la-cr-pseudo.lo: cr-pseudo.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-pseudo.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-pseudo.Tpo -c -o libcroco_0_6_la-cr-pseudo.lo `test -f 'cr-pseudo.c' || echo '$(srcdir)/'`cr-pseudo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-pseudo.Tpo $(DEPDIR)/libcroco_0_6_la-cr-pseudo.Plo
#	$(AM_V_CC)source='cr-pseudo.c' object='libcroco_0_6_la-cr-pseudo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-pseudo.lo `test -f 'cr-pseudo.c' || echo '$(srcdir)/'`cr-pseudo.c

libcroco_0_6_la-cr-additional-sel.lo: cr-additional-sel.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-additional-sel.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-additional-sel.Tpo -c -o libcroco_0_6_la-cr-additional-sel.lo `test -f 'cr-additional-sel.c' || echo '$(srcdir)/'`cr-additional-sel.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-additional-sel.Tpo $(DEPDIR)/libcroco_0_6_la-cr-additional-sel.Plo
#	$(AM_V_CC)source='cr-additional-sel.c' object='libcroco_0_6_la-cr-additional-sel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-additional-sel.lo `test -f 'cr-additional-sel.c' || echo '$(srcdir)/'`cr-additional-sel.c

libcroco_0_6_la-cr-simple-sel.lo: cr-simple-sel.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-simple-sel.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-simple-sel.Tpo -c -o libcroco_0_6_la-cr-simple-sel.lo `test -f 'cr-simple-sel.c' || echo '$(srcdir)/'`cr-simple-sel.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-simple-sel.Tpo $(DEPDIR)/libcroco_0_6_la-cr-simple-sel.Plo
#	$(AM_V_CC)source='cr-simple-sel.c' object='libcroco_0_6_la-cr-simple-sel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-simple-sel.lo `test -f 'cr-simple-sel.c' || echo '$(srcdir)/'`cr-simple-sel.c

libcroco_0_6_la-cr-selector.lo: cr-selector.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-selector.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-selector.Tpo -c -o libcroco_0_6_la-cr-selector.lo `test -f 'cr-selector.c' || echo '$(srcdir)/'`cr-selector.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-selector.Tpo $(DEPDIR)/libcroco_0_6_la-cr-selector.Plo
#	$(AM_V_CC)source='cr-selector.c' object='libcroco_0_6_la-cr-selector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-selector.lo `test -f 'cr-selector.c' || echo '$(srcdir)/'`cr-selector.c

libcroco_0_6_la-cr-doc-handler.lo: cr-doc-handler.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-doc-handler.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-doc-handler.Tpo -c -o libcroco_0_6_la-cr-doc-handler.lo `test -f 'cr-doc-handler.c' || echo '$(srcdir)/'`cr-doc-handler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-doc-handler.Tpo $(DEPDIR)/libcroco_0_6_la-cr-doc-handler.Plo
#	$(AM_V_CC)source='cr-doc-handler.c' object='libcroco_0_6_la-cr-doc-handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-doc-handler.lo `test -f 'cr-doc-handler.c' || echo '$(srcdir)/'`cr-doc-handler.c

libcroco_0_6_la-cr-parser.lo: cr-parser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-parser.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-parser.Tpo -c -o libcroco_0_6_la-cr-parser.lo `test -f 'cr-parser.c' || echo '$(srcdir)/'`cr-parser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-parser.Tpo $(DEPDIR)/libcroco_0_6_la-cr-parser.Plo
#	$(AM_V_CC)source='cr-parser.c' object='libcroco_0_6_la-cr-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-parser.lo `test -f 'cr-parser.c' || echo '$(srcdir)/'`cr-parser.c

libcroco_0_6_la-cr-declaration.lo: cr-declaration.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-declaration.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-declaration.Tpo -c -o libcroco_0_6_la-cr-declaration.lo `test -f 'cr-declaration.c' || echo '$(srcdir)/'`cr-declaration.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-declaration.Tpo $(DEPDIR)/libcroco_0_6_la-cr-declaration.Plo
#	$(AM_V_CC)source='cr-declaration.c' object='libcroco_0_6_la-cr-declaration.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-declaration.lo `test -f 'cr-declaration.c' || echo '$(srcdir)/'`cr-declaration.c

libcroco_0_6_la-cr-statement.lo: cr-statement.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-statement.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-statement.Tpo -c -o libcroco_0_6_la-cr-statement.lo `test -f 'cr-statement.c' || echo '$(srcdir)/'`cr-statement.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-statement.Tpo $(DEPDIR)/libcroco_0_6_la-cr-statement.Plo
#	$(AM_V_CC)source='cr-statement.c' object='libcroco_0_6_la-cr-statement.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-statement.lo `test -f 'cr-statement.c' || echo '$(srcdir)/'`cr-statement.c

libcroco_0_6_la-cr-stylesheet.lo: cr-stylesheet.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-stylesheet.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-stylesheet.Tpo -c -o libcroco_0_6_la-cr-stylesheet.lo `test -f 'cr-stylesheet.c' || echo '$(srcdir)/'`cr-stylesheet.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-stylesheet.Tpo $(DEPDIR)/libcroco_0_6_la-cr-stylesheet.Plo
#	$(AM_V_CC)source='cr-stylesheet.c' object='libcroco_0_6_la-cr-stylesheet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-stylesheet.lo `test -f 'cr-stylesheet.c' || echo '$(srcdir)/'`cr-stylesheet.c

libcroco_0_6_la-cr-cascade.lo: cr-cascade.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-cascade.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-cascade.Tpo -c -o libcroco_0_6_la-cr-cascade.lo `test -f 'cr-cascade.c' || echo '$(srcdir)/'`cr-cascade.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-cascade.Tpo $(DEPDIR)/libcroco_0_6_la-cr-cascade.Plo
#	$(AM_V_CC)source='cr-cascade.c' object='libcroco_0_6_la-cr-cascade.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-cascade.lo `test -f 'cr-cascade.c' || echo '$(srcdir)/'`cr-cascade.c

libcroco_0_6_la-cr-om-parser.lo: cr-om-parser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-om-parser.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-om-parser.Tpo -c -o libcroco_0_6_la-cr-om-parser.lo `test -f 'cr-om-parser.c' || echo '$(srcdir)/'`cr-om-parser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-om-parser.Tpo $(DEPDIR)/libcroco_0_6_la-cr-om-parser.Plo
#	$(AM_V_CC)source='cr-om-parser.c' object='libcroco_0_6_la-cr-om-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-om-parser.lo `test -f 'cr-om-parser.c' || echo '$(srcdir)/'`cr-om-parser.c

libcroco_0_6_la-cr-style.lo: cr-style.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-style.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-style.Tpo -c -o libcroco_0_6_la-cr-style.lo `test -f 'cr-style.c' || echo '$(srcdir)/'`cr-style.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-style.Tpo $(DEPDIR)/libcroco_0_6_la-cr-style.Plo
#	$(AM_V_CC)source='cr-style.c' object='libcroco_0_6_la-cr-style.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-style.lo `test -f 'cr-style.c' || echo '$(srcdir)/'`cr-style.c

libcroco_0_6_la-cr-sel-eng.lo: cr-sel-eng.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-sel-eng.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-sel-eng.Tpo -c -o libcroco_0_6_la-cr-sel-eng.lo `test -f 'cr-sel-eng.c' || echo '$(srcdir)/'`cr-sel-eng.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-sel-eng.Tpo $(DEPDIR)/libcroco_0_6_la-cr-sel-eng.Plo
#	$(AM_V_CC)source='cr-sel-eng.c' object='libcroco_0_6_la-cr-sel-eng.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-sel-eng.lo `test -f 'cr-sel-eng.c' || echo '$(srcdir)/'`cr-sel-eng.c

libcroco_0_6_la-cr-fonts.lo: cr-fonts.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-fonts.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-fonts.Tpo -c -o libcroco_0_6_la-cr-fonts.lo `test -f 'cr-fonts.c' || echo '$(srcdir)/'`cr-fonts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-fonts.Tpo $(DEPDIR)/libcroco_0_6_la-cr-fonts.Plo
#	$(AM_V_CC)source='cr-fonts.c' object='libcroco_0_6_la-cr-fonts.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-fonts.lo `test -f 'cr-fonts.c' || echo '$(srcdir)/'`cr-fonts.c

libcroco_0_6_la-cr-prop-list.lo: cr-prop-list.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-prop-list.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-prop-list.Tpo -c -o libcroco_0_6_la-cr-prop-list.lo `test -f 'cr-prop-list.c' || echo '$(srcdir)/'`cr-prop-list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-prop-list.Tpo $(DEPDIR)/libcroco_0_6_la-cr-prop-list.Plo
#	$(AM_V_CC)source='cr-prop-list.c' object='libcroco_0_6_la-cr-prop-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-prop-list.lo `test -f 'cr-prop-list.c' || echo '$(srcdir)/'`cr-prop-list.c

libcroco_0_6_la-cr-parsing-location.lo: cr-parsing-location.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-parsing-location.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-parsing-location.Tpo -c -o libcroco_0_6_la-cr-parsing-location.lo `test -f 'cr-parsing-location.c' || echo '$(srcdir)/'`cr-parsing-location.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-parsing-location.Tpo $(DEPDIR)/libcroco_0_6_la-cr-parsing-location.Plo
#	$(AM_V_CC)source='cr-parsing-location.c' object='libcroco_0_6_la-cr-parsing-location.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-parsing-location.lo `test -f 'cr-parsing-location.c' || echo '$(srcdir)/'`cr-parsing-location.c

libcroco_0_6_la-cr-string.lo: cr-string.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -MT libcroco_0_6_la-cr-string.lo -MD -MP -MF $(DEPDIR)/libcroco_0_6_la-cr-string.Tpo -c -o libcroco_0_6_la-cr-string.lo `test -f 'cr-string.c' || echo '$(srcdir)/'`cr-string.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcroco_0_6_la-cr-string.Tpo $(DEPDIR)/libcroco_0_6_la-cr-string.Plo
#	$(AM_V_CC)source='cr-string.c' object='libcroco_0_6_la-cr-string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcroco_0_6_la_CPPFLAGS) $(CPPFLAGS) $(libcroco_0_6_la_CFLAGS) $(CFLAGS) -c -o libcroco_0_6_la-cr-string.lo `test -f 'cr-string.c' || echo '$(srcdir)/'`cr-string.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-crocoincHEADERS: $(crocoinc_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(crocoinc_HEADERS)'; test -n "$(crocoincdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(crocoincdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(crocoincdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(crocoincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(crocoincdir)" || exit $$?; \
	done

uninstall-crocoincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(crocoinc_HEADERS)'; test -n "$(crocoincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(crocoincdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(crocoincdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-additional-sel.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-attr-sel.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-cascade.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-declaration.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-doc-handler.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-enc-handler.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-fonts.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-input.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-num.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-om-parser.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-parser.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-parsing-location.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-prop-list.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-pseudo.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-rgb.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-sel-eng.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-selector.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-simple-sel.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-statement.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-string.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-style.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-stylesheet.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-term.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-tknzr.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-token.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-utils.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-crocoincHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-additional-sel.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-attr-sel.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-cascade.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-declaration.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-doc-handler.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-enc-handler.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-fonts.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-input.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-num.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-om-parser.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-parser.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-parsing-location.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-prop-list.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-pseudo.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-rgb.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-sel-eng.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-selector.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-simple-sel.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-statement.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-string.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-style.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-stylesheet.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-term.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-tknzr.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-token.Plo
	-rm -f ./$(DEPDIR)/libcroco_0_6_la-cr-utils.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-crocoincHEADERS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool cscopelist-am \
	ctags ctags-am dist-hook distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-crocoincHEADERS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-crocoincHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


#
# Creates Visual Studio 2008/2010 projects from items passed in from autotools files
# $(1) - Base Name of the MSVC project files (outputs)
#

define msvcproj-builder

$(top_builddir)/win32/vs10/$(1).vcxproj: $(top_builddir)/win32/vs9/$(1).vcproj
$(top_builddir)/win32/vs10/$(1).vcxproj.filters: $(top_builddir)/win32/vs9/$(1).vcproj
$(1).sourcefiles: $(top_builddir)/win32/vs9/$(1).vcproj
$(1).vs10.sourcefiles: $(top_builddir)/win32/vs9/$(1).vcproj
$(1).vs10.sourcefiles.filters: $(top_builddir)/win32/vs9/$(1).vcproj

$(top_builddir)/win32/vs9/$(1).vcproj: Makefile
	-$(RM) $(top_builddir)/win32/vs9/$(1).vcproj
	-$(RM) $(top_builddir)/win32/vs10/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs10/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/win32/vs11/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs11/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/win32/vs12/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs12/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/win32/vs14/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs14/$(1).vcxproj.filters

	for F in $(_proj_files); do \
		case $$$$F in \
		$(_proj_filters)) \
			;; \
		*.c|*.cpp|*.cc|*.cxx) \
			echo '   <File RelativePath="..\..'$(_proj_subdir)$$$$F'" />' >>$(1).sourcefiles && \
			echo '   <ClCompile Include="..\..'$(_proj_subdir)$$$$F'" />' >>$(1).vs10.sourcefiles && \
			echo '   <ClCompile Include="..\..'$(_proj_subdir)$$$$F'"><Filter>Source Files</Filter></ClCompile>' >>$(1).vs10.sourcefiles.filters \
			;; \
		esac;	\
	done

	$(CPP) -P - <$(top_srcdir)/win32/vs9/$(1).vcprojin >$(top_builddir)/win32/vs9/$(1).vcproj
	$(CPP) -P - <$(top_srcdir)/win32/vs10/$(1).vcxprojin >$(top_builddir)/win32/vs10/$(1).vcxproj
	$(CPP) -P - <$(top_srcdir)/win32/vs10/$(1).vcxproj.filtersin >$(top_builddir)/win32/vs10/$(1).vcxproj.filters
	$(RM) $(1).sourcefiles
	$(RM) $(1).vs10.sourcefiles
	$(RM) $(1).vs10.sourcefiles.filters

$(top_builddir)/win32/vs10/$(1).vs10.headers: $(top_builddir)/win32/vs9/$(1).headers

$(top_builddir)/win32/vs9/$(1).headers: Makefile
	-$(RM) $(top_builddir)/win32/vs9/$(1).headers
	-$(RM) $(top_builddir)/win32/vs10/$(1).vs10.headers

	for F in $(_proj_headers); do \
		case $$$$F in \
		$(_proj_headers_excludes)) \
			;; \
		*.h|*.hpp|*.hh|*.hxx) \
			echo 'copy ..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F'&#x0D;&#x0A;' >>$(top_builddir)/win32/vs9/$(1).headers && \
			echo 'copy ..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F >>$(top_builddir)/win32/vs10/$(1).vs10.headers \
			;; \
		esac;	\
	done

$(top_builddir)/win32/vs12/$(1).vcxproj.filters: $(top_builddir)/win32/vs12/$(1).vcxproj

$(top_builddir)/win32/vs12/$(1).vcxproj: Makefile
	-$(RM) $(top_builddir)/win32/vs14/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs14/$(1).vcxproj.filters

	for F in $(_proj_files); do \
		case $$$$F in \
		$(_proj_filters)) \
			;; \
		*.c|*.cpp|*.cc|*.cxx) \
			echo '   <ClCompile Include="..\..'$(_proj_subdir)$$$$F'" />' >>$(1).vs12.sourcefiles && \
			echo '   <ClCompile Include="..\..'$(_proj_subdir)$$$$F'"><Filter>Source Files</Filter></ClCompile>' >>$(1).vs12.sourcefiles.filters \
			;; \
		esac;	\
	done

	$(CPP) -P - <$(top_srcdir)/win32/vs12/$(1).vcxprojin >$(top_builddir)/win32/vs12/$(1).vcxproj
	$(CPP) -P - <$(top_srcdir)/win32/vs12/$(1).vcxproj.filtersin >$(top_builddir)/win32/vs12/$(1).vcxproj.filters
	$(RM) $(1).vs12.sourcefiles
	$(RM) $(1).vs12.sourcefiles.filters

$(top_builddir)/win32/vs12/$(1).vs12.headers: Makefile
	-$(RM) $(top_builddir)/win32/vs12/$(1).vs12.headers

	for F in $(_proj_headers); do \
		case $$$$F in \
		$(_proj_headers_excludes)) \
			;; \
		*.h|*.hpp|*.hh|*.hxx) \
			echo 'copy ..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F >>$(top_builddir)/win32/vs12/$(1).vs12.headers \
			;; \
		esac;	\
	done

endef

$(foreach proj,$(MSVCPROJS),$(eval $(call msvcproj-builder,$(proj))))

dist-hook:	\
	$(top_builddir)/win32/vs9/croco.vcproj \
	$(top_builddir)/win32/vs9/croco.headers

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
